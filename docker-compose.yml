version: "3.4"

x-common-variables: &common-variables
  MYSQL_USER: tfguser
  MYSQL_PASSWORD: tfgpasswd
  MYSQL_DATABASE: sampledb
  REACT_APP_SERVER_PORT: 3001

services:
  mysql-db:
    image: mysql:5.7
    container_name: mysql_container
    environment:
      <<: *common-variables
      MYSQL_ROOT_PASSWORD: tfgpasswd
    ports:
      - "3307:3306"  # Mapeo correcto: el puerto externo 3307 se mapea al interno 3306 de MySQL
    restart: unless-stopped
    volumes:
      - ./db/sample.sql:/docker-entrypoint-initdb.d/sample.sql

  phpmyadmin:
    depends_on:
      - mysql-db
    image: phpmyadmin/phpmyadmin
    container_name: phpadmin_container
    environment:
      PMA_HOST: mysql-db  # Host apunta al nombre del servicio de MySQL
    links:
      - mysql-db:mysql-db
    ports:
      - "8080:80"
    restart: always

  server:
    build: ./server
    container_name: node_server_container
    depends_on:
      - mysql-db
    environment:
      <<: *common-variables
      MYSQL_HOST_IP: mysql-db  # Debe ser el nombre del servicio para que se resuelva en Docker
    ports:
      - "3001:3001"  # Mapeo del puerto externo 3001 al interno 3001
    volumes:
      - ./server:/app
    links:
      - mysql-db
    command: node index.js  # Cambiado a 'node index.js' si el servidor se inicia con este comando

  client:
    build: ./client
    container_name: client_container
    environment:
      <<: *common-variables
      NODE_PATH: src
    ports:
      - "3000:3000"  # Mapeo del puerto externo 3000 al interno 3000
    volumes:
      - ./client/src:/app/src
    links:
      - server
    command: npm start  # Comando para iniciar la aplicaciÃ³n React
